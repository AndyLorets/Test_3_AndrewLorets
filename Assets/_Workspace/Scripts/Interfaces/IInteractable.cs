using System;

/// <summary>
/// [INTERFACE] - Определяет "контракт" для любого объекта в игровом мире,
/// с которым можно взаимодействовать, чтобы открыть его инвентарь.
/// Любой класс, реализующий этот интерфейс, ОБЯЗАН предоставить
/// все перечисленные в нем свойства и события.
/// Это позволяет системе (например, InventoryUIManager) работать со всеми
/// интерактивными объектами (игроком, сундуками, полками) одинаково,
/// не зная их конкретного типа.
/// </summary>
public interface IInteractable
{
    /// <summary>
    /// Событие, которое должно вызываться, когда игрок успешно провзаимодействовал с этим объектом (например, кликнул).
    /// Подписчики (например, InventoryUIManager) будут слушать это событие.
    /// </summary>
    event Action<IInteractable> OnInteracted;

    /// <summary>
    /// Свойство, которое должно возвращать экземпляр инвентаря, принадлежащего этому объекту.
    /// </summary>
    InventoryModel Inventory { get; }

    /// <summary>
    /// Свойство, которое должно возвращать отображаемое имя инвентаря этого объекта (например, "Рюкзак" или "Старый сундук").
    /// </summary>
    string ContainerName { get; }
}